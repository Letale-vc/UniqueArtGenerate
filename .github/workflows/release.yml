name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on tags like v1.0.0, v1.2.3
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            runtime: win-x64
            artifact: UniqueArtGenerate-win-x64.exe
          - os: ubuntu-latest
            runtime: linux-x64
            artifact: UniqueArtGenerate-linux-x64
          - os: macos-latest
            runtime: osx-x64
            artifact: UniqueArtGenerate-osx-x64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore UniqueArtGenerate

    - name: Publish Native AOT
      run: dotnet publish UniqueArtGenerate -c Release -r ${{ matrix.runtime }} --self-contained -o ./publish

    - name: Rename artifact (Windows)
      if: matrix.os == 'windows-latest'
      run: mv ./publish/UniqueArtGenerate.exe ./publish/${{ matrix.artifact }}
      shell: bash

    - name: Rename artifact (Unix)
      if: matrix.os != 'windows-latest'
      run: mv ./publish/UniqueArtGenerate ./publish/${{ matrix.artifact }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: ./publish/${{ matrix.artifact }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./artifacts/UniqueArtGenerate-win-x64.exe/UniqueArtGenerate-win-x64.exe
          ./artifacts/UniqueArtGenerate-linux-x64/UniqueArtGenerate-linux-x64
          ./artifacts/UniqueArtGenerate-osx-x64/UniqueArtGenerate-osx-x64
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
